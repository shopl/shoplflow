name: Test Changed Packages with Turbo on PR

on:
  push:

#  pull_request:
#    types: [ opened, synchronize ] # PR이 오픈되거나 커밋이 추가될 때

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: yarn install

      - name: Test changed packages with Turbo
        run: yarn turbo run test
      # --since ${{ github.event.before }}
      #      - name: Generate JUnit report
      #        run: jest --reporters="default" --reporters="jest-junit"

      - name: Parse test results
        id: parse-results
        run: |
          TABLE_HEADER="| Package | Success | Failures |\n| --- | --- | --- |\n"
          TABLE_CONTENT=""

          # 모든 junit.xml 파일을 찾기
          for file in $(find . -name 'junit.xml'); do
            # 파일명에서 패키지 이름 추출 (예: packages/my-package/junit.xml)
            PACKAGE_NAME=$(dirname "$file")
            TESTED_PACKAGES+="$PACKAGE_NAME, "

            # XML 파일을 파싱하여 테스트 결과 가져오기 (이 부분은 실제 파싱 로직에 따라 다를 수 있습니다.)
            SUCCESS_COUNT=$(cat "$file" | grep '<testsuite' | awk 'BEGIN { FS=" " } ; { print $2 }')
            FAILURE_COUNT=$(cat "$file" | grep '<testsuite' | awk 'BEGIN { FS=" " } ; { print $3 }')

            # 테이블 내용 생성
            TABLE_CONTENT+="| $PACKAGE_NAME | $SUCCESS_COUNT | $FAILURE_COUNT |\n"
          done
          
          echo "TESTED_PACKAGES=${TESTED_PACKAGES::-2}" >> $GITHUB_ENV
          echo "TEST_RESULTS_TABLE=${TABLE_HEADER}${TABLE_CONTENT}" >> $GITHUB_ENV
        

        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              attachments: [{
                title: ":white_check_mark: 테스트가 완료되었습니다 - ${{ env.TESTED_PACKAGES }}",
                color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                text: `
                        ${{ github.event.pull_request.title }}\n${process.env.AS_COMMIT} in ${process.env.AS_TOOK}\n\n${{ env.TEST_RESULTS_TABLE }}
                        `,
                actions: [
                  {
                    type: "button",
                    text: "테스트 결과 확인하기",
                    url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                  },
                  {
                    type: "button",
                    text: "Storybook 확인하기",
                    url: "${{ steps.chromatic_build.outputs.storybookUrl }}"
                  },
                  {
                    type: "button",
                    text: "빌드 확인하기",
                    url: "${{ steps.chromatic_build.outputs.buildUrl }}"
                  }
                ]
              }]
            }
