name: Test Changed Packages with Turbo on PR

on:
  push:

#  pull_request:
#    types: [ opened, synchronize ] # PR이 오픈되거나 커밋이 추가될 때

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: yarn install

      - name: Test changed packages with Turbo
        run: yarn turbo run test
      # --since ${{ github.event.before }}
      #      - name: Generate JUnit report
      #        run: jest --reporters="default" --reporters="jest-junit"

      - name: Parse test results
        id: parse-results
        run: |
          MESSAGE="Test results:\n"

          # 모든 junit.xml 파일을 찾기
          for file in $(find . -name 'junit.xml'); do
            # 파일명에서 패키지 이름 추출 (예: packages/my-package/junit.xml)
            PACKAGE_NAME=$(dirname "$file")

            # XML 파일을 파싱하여 테스트 결과 가져오기 (이 부분은 실제 파싱 로직에 따라 다를 수 있습니다.)
            SUCCESS_COUNT=$(cat "$file" | grep '<testsuite' | awk 'BEGIN { FS=" " } ; { print $2 }')
            FAILURE_COUNT=$(cat "$file" | grep '<testsuite' | awk 'BEGIN { FS=" " } ; { print $3 }')

            # 메시지 생성
            MESSAGE+="$PACKAGE_NAME - Success: $SUCCESS_COUNT, Failures: $FAILURE_COUNT\n"
          done

          echo "TEST_RESULTS_MESSAGE=${MESSAGE}" >> $GITHUB_ENV


      - name: Send test results to Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: ${{ env.TEST_RESULTS_MESSAGE }}
          fields: repo,commit,author,action,eventName,ref,workflow,job,took # optional
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # Slack Webhook URL
