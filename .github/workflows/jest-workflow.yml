name: Test Changed Packages with Turbo on PR

on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  jest-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: yarn install

      - name: 변경된 패키지만 테스트하고 있어요.
        run: yarn turbo run test --since=origin/main

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Test Report
          path: '**/junit.xml'
          fail-on-error: 'false'
          reporter: jest-junit
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Test Status
        id: set_status
        run: |
          echo "::set-output name=status::${{ job.status }}"


      - name: Set Test Status and Color
        id: set_status_and_color
        run: |
          if [ "${{ job.status }}" == "success" ]; then
          echo "::set-output name=status_text::테스트가 완료되었어요."
          echo "::set-output name=color::good"
          elif [ "${{ job.status }}" == "failure" ]; then
          echo "::set-output name=status_text::테스트가 실패했어요."
          echo "::set-output name=color::danger"
          else
          echo "::set-output name=status_text::테스트 상태를 확인하세요."
          echo "::set-output name=color::warning"
          fi

      - name: Slack Notification
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              attachments: [{
              title: "${{ steps.set_status_and_color.outputs.status_text }}",
              color: "${{ steps.set_status_and_color.outputs.color }}",
              text: `
                text: `
                ${{ github.event.pull_request.title }}\n${process.env.AS_COMMIT} in ${process.env.AS_TOOK}
                `,
                actions: [
                  {
                    type: "button",
                    text: "Test Report 확인하기",
                    url: "https://github.com/shopl/shoplflow/actions/runs/${{ github.run_id }}"
                  },
                  {
                    type: "button",
                    text: "PR 확인하기",
                    url: "${{ github.event.pull_request.html_url }}"
                  }
                ]
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

